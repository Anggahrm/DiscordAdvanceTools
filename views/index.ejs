<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="/socket.io/socket.io.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #5865f2;
            --secondary-color: #57f287;
            --background-dark: #2f3136;
            --surface-dark: #36393f;
            --text-light: #dcddde;
            --text-muted: #8e9297;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
        }

        .main-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: 0 32px 64px rgba(0, 0, 0, 0.12);
            margin: 2rem auto;
            padding: 3rem;
            max-width: 1200px;
        }

        .discord-logo {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary-color), #7289da);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 32px;
            margin: 0 auto 1.5rem;
            box-shadow: 0 8px 32px rgba(88, 101, 242, 0.3);
        }

        .form-control {
            border-radius: 12px;
            border: 2px solid #e9ecef;
            padding: 12px 16px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(88, 101, 242, 0.15);
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), #7289da);
            border: none;
            border-radius: 12px;
            padding: 14px 32px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(88, 101, 242, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 32px rgba(88, 101, 242, 0.4);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ed4245, #c4373a);
            border: none;
            border-radius: 12px;
            padding: 14px 32px;
            font-weight: 600;
        }

        .btn-success {
            background: linear-gradient(135deg, var(--secondary-color), #40c057);
            border: none;
            border-radius: 12px;
            padding: 14px 32px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 16px rgba(87, 242, 135, 0.3);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 32px rgba(87, 242, 135, 0.4);
        }

        .progress {
            height: 32px;
            border-radius: 16px;
            overflow: hidden;
            background: #f1f3f4;
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.06);
        }

        .progress-bar {
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
            border-radius: 16px;
            transition: width 0.6s ease;
        }

        .log-container {
            background: var(--background-dark);
            color: var(--text-light);
            border-radius: 16px;
            padding: 1.5rem;
            max-height: 350px;
            overflow-y: auto;
            font-family: 'JetBrains Mono', 'Fira Code', monospace;
            font-size: 13px;
            line-height: 1.6;
            border: 1px solid #40444b;
        }

        .log-entry {
            margin: 0.5rem 0;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            display: flex;
            align-items: center;
        }

        .log-entry:last-child {
            border-bottom: none;
        }

        .log-error { color: #ff6b6b; }
        .log-success { color: var(--secondary-color); }
        .log-info { color: #74c0fc; }
        .log-warning { color: #ffd93d; }

        .stats-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            margin: 1.5rem 0;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.06);
            border: 1px solid #f1f3f4;
        }

        .stat-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid #f8f9fa;
        }

        .stat-item:last-child {
            border-bottom: none;
        }

        .stat-value {
            font-weight: 700;
            color: var(--primary-color);
            font-size: 1.2rem;
        }

        .feature-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            margin: 1rem 0;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.06);
            border: 1px solid #f1f3f4;
            transition: all 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 16px 48px rgba(0, 0, 0, 0.12);
        }

        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .input-group-text {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 12px 0 0 12px;
        }

        #cloning-section {
            display: none;
        }

        .clone-options {
            background: #f8f9fa;
            border-radius: 16px;
            padding: 2rem;
            margin: 1.5rem 0;
        }

        .section-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            font-size: 1.25rem;
        }

        .section-title i {
            margin-right: 0.75rem;
            background: linear-gradient(135deg, var(--primary-color), #7289da);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .form-check-label {
            font-weight: 500;
            cursor: pointer;
        }

        .form-check-label small {
            font-weight: 400;
            color: #6c757d;
        }

        @media (max-width: 768px) {
            .main-container {
                margin: 1rem;
                padding: 2rem;
            }
            
            .btn {
                width: 100%;
                margin: 0.5rem 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="main-container">
            <!-- Header -->
            <div class="text-center mb-5">
                <div class="discord-logo">
                    <i class="fab fa-discord"></i>
                </div>
                <h1 class="h2 mb-3">Discord Server Cloner</h1>
                <p class="text-muted mb-0">Professional server cloning with real-time monitoring</p>
            </div>

            <!-- Alerts -->
            <% if (error) { %>
                <div class="alert alert-danger" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i><%= error %>
                </div>
            <% } %>
            
            <% if (success) { %>
                <div class="alert alert-success" role="alert">
                    <i class="fas fa-check-circle me-2"></i><%= success %>
                </div>
            <% } %>

            <!-- Main Form -->
            <div id="main-form">
                <form id="cloneForm" method="POST" action="/clone">
                    <div class="row">
                        <!-- Left Column - Server Configuration -->
                        <div class="col-lg-6">
                            <div class="feature-card">
                                <h5 class="section-title">
                                    <i class="fas fa-server"></i>
                                    Configuration
                                </h5>
                                
                                <div class="mb-4">
                                    <label for="token" class="form-label fw-semibold">
                                        <i class="fas fa-key me-2"></i>Discord Token
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        <input type="password" class="form-control" id="token" name="token" required
                                               placeholder="Bot token or user token">
                                    </div>
                                    <div class="form-text">
                                        <small class="text-success">✓ Bot tokens recommended</small> • 
                                        <small class="text-warning">⚠️ User tokens violate ToS</small>
                                    </div>
                                </div>

                                <div class="mb-4">
                                    <label for="sourceServerId" class="form-label fw-semibold">
                                        <i class="fas fa-download me-2"></i>Source Server ID
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-server"></i></span>
                                        <input type="text" class="form-control" id="sourceServerId" name="sourceServerId" required
                                               placeholder="123456789012345678">
                                    </div>
                                </div>

                                <div class="mb-4">
                                    <label for="targetServerId" class="form-label fw-semibold">
                                        <i class="fas fa-upload me-2"></i>Target Server ID
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-server"></i></span>
                                        <input type="text" class="form-control" id="targetServerId" name="targetServerId" required
                                               placeholder="987654321098765432">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Right Column - Clone Options -->
                        <div class="col-lg-6">
                            <div class="feature-card">
                                <h5 class="section-title">
                                    <i class="fas fa-cogs"></i>
                                    Clone Options
                                </h5>
                                
                                <div class="clone-options">
                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" value="true" id="cloneServerInfo" name="cloneServerInfo" checked>
                                        <label class="form-check-label" for="cloneServerInfo">
                                            <i class="fas fa-info-circle me-2"></i>
                                            <strong>Server Info</strong>
                                            <small class="d-block">Name and basic settings</small>
                                        </label>
                                    </div>

                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" value="true" id="cloneRoles" name="cloneRoles" checked>
                                        <label class="form-check-label" for="cloneRoles">
                                            <i class="fas fa-users me-2"></i>
                                            <strong>Roles</strong>
                                            <small class="d-block">Permissions and hierarchy</small>
                                        </label>
                                    </div>

                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" value="true" id="cloneCategories" name="cloneCategories" checked>
                                        <label class="form-check-label" for="cloneCategories">
                                            <i class="fas fa-folder me-2"></i>
                                            <strong>Categories</strong>
                                            <small class="d-block">Channel organization</small>
                                        </label>
                                    </div>

                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" value="true" id="cloneChannels" name="cloneChannels" checked>
                                        <label class="form-check-label" for="cloneChannels">
                                            <i class="fas fa-hashtag me-2"></i>
                                            <strong>Channels</strong>
                                            <small class="d-block">Text and voice channels</small>
                                        </label>
                                    </div>

                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" value="true" id="cloneMessages" name="cloneMessages">
                                        <label class="form-check-label" for="cloneMessages">
                                            <i class="fas fa-comment me-2"></i>
                                            <strong>Messages</strong>
                                            <small class="d-block">Recent message history</small>
                                        </label>
                                    </div>

                                    <div class="mb-3" id="messageLimitGroup" style="display: none;">
                                        <label for="messageLimit" class="form-label fw-semibold">
                                            <i class="fas fa-sort-numeric-up me-2"></i>Message Limit
                                        </label>
                                        <input type="number" class="form-control" id="messageLimit" name="messageLimit" 
                                               value="50" min="1" max="100">
                                        <div class="form-text">Maximum 100 messages per channel</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary btn-lg" id="startCloneBtn">
                            <i class="fas fa-play me-2"></i>Start Clone
                        </button>
                    </div>
                </form>
            </div>

            <!-- Cloning Progress Section -->
            <div id="cloning-section">
                <div class="feature-card">
                    <h5 class="section-title">
                        <i class="fas fa-tasks"></i>
                        Progress
                    </h5>
                    
                    <div class="mb-4">
                        <div class="d-flex justify-content-between mb-2">
                            <span id="progress-text" class="fw-medium">Initializing...</span>
                            <span id="progress-percentage" class="fw-bold">0%</span>
                        </div>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" id="progress-bar" style="width: 0%"></div>
                        </div>
                    </div>

                    <!-- Statistics -->
                    <div class="stats-card">
                        <h6 class="mb-3 fw-bold">
                            <i class="fas fa-chart-bar me-2"></i>Statistics
                        </h6>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="stat-item">
                                    <span><i class="fas fa-users me-2"></i>Roles</span>
                                    <span class="stat-value" id="stat-roles">0</span>
                                </div>
                                <div class="stat-item">
                                    <span><i class="fas fa-folder me-2"></i>Categories</span>
                                    <span class="stat-value" id="stat-categories">0</span>
                                </div>
                                <div class="stat-item">
                                    <span><i class="fas fa-hashtag me-2"></i>Text Channels</span>
                                    <span class="stat-value" id="stat-text-channels">0</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="stat-item">
                                    <span><i class="fas fa-volume-up me-2"></i>Voice Channels</span>
                                    <span class="stat-value" id="stat-voice-channels">0</span>
                                </div>
                                <div class="stat-item">
                                    <span><i class="fas fa-comment me-2"></i>Messages</span>
                                    <span class="stat-value" id="stat-messages">0</span>
                                </div>
                                <div class="stat-item">
                                    <span><i class="fas fa-exclamation-triangle me-2"></i>Errors</span>
                                    <span class="stat-value text-danger" id="stat-errors">0</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Live Logs -->
                    <div class="mt-4">
                        <h6 class="mb-3 fw-bold">
                            <i class="fas fa-terminal me-2"></i>Live Logs
                        </h6>
                        <div class="log-container" id="logs">
                            <div class="log-entry log-info">
                                <i class="fas fa-info-circle me-2"></i>Ready to start cloning...
                            </div>
                        </div>
                    </div>
                    
                    <!-- Action Buttons for Progress Section -->
                    <div class="text-center mt-4">
                        <button type="button" class="btn btn-success btn-lg me-3" id="newCloneBtn" style="display: none;">
                            <i class="fas fa-plus me-2"></i>New Clone
                        </button>
                        <button type="button" class="btn btn-danger btn-lg" id="stopCloneBtn" style="display: none;">
                            <i class="fas fa-stop me-2"></i>Stop
                        </button>
                    </div>
                </div>
            </div>

            <!-- Quick Guide -->
            <div class="feature-card mt-4">
                <h5 class="section-title">
                    <i class="fas fa-lightbulb"></i>
                    Quick Guide
                </h5>
                <div class="row">
                    <div class="col-md-4">
                        <div class="text-center mb-3">
                            <i class="fas fa-robot fa-2x text-primary mb-2"></i>
                            <h6 class="fw-bold">1. Get Bot Token</h6>
                            <p class="small text-muted">Create a bot at <a href="https://discord.com/developers/applications" target="_blank">Discord Developer Portal</a></p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center mb-3">
                            <i class="fas fa-id-card fa-2x text-primary mb-2"></i>
                            <h6 class="fw-bold">2. Get Server IDs</h6>
                            <p class="small text-muted">Enable Developer Mode, right-click server → Copy ID</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="text-center mb-3">
                            <i class="fas fa-shield-alt fa-2x text-primary mb-2"></i>
                            <h6 class="fw-bold">3. Set Permissions</h6>
                            <p class="small text-muted">Grant Administrator or required permissions to bot</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const socket = io();
        let currentClonerId = null;

        // Toggle message limit input
        document.getElementById('cloneMessages').addEventListener('change', function() {
            const messageLimitGroup = document.getElementById('messageLimitGroup');
            messageLimitGroup.style.display = this.checked ? 'block' : 'none';
        });

        // Form submission
        document.getElementById('cloneForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {};
            
            for (let [key, value] of formData.entries()) {
                data[key] = value;
            }

            // Set boolean values
            data.cloneServerInfo = document.getElementById('cloneServerInfo').checked;
            data.cloneRoles = document.getElementById('cloneRoles').checked;
            data.cloneCategories = document.getElementById('cloneCategories').checked;
            data.cloneChannels = document.getElementById('cloneChannels').checked;
            data.cloneMessages = document.getElementById('cloneMessages').checked;

            // Validation
            if (!data.token?.trim()) {
                alert('❌ Discord token is required');
                return;
            }

            if (!data.sourceServerId?.trim()) {
                alert('❌ Source server ID is required');
                return;
            }

            if (!data.targetServerId?.trim()) {
                alert('❌ Target server ID is required');
                return;
            }

            if (data.sourceServerId === data.targetServerId) {
                alert('❌ Source and target servers cannot be the same');
                return;
            }

            const serverIdRegex = /^\d{17,19}$/;
            if (!serverIdRegex.test(data.sourceServerId)) {
                alert('❌ Invalid source server ID format');
                return;
            }

            if (!serverIdRegex.test(data.targetServerId)) {
                alert('❌ Invalid target server ID format');
                return;
            }

            const options = {
                cloneServerInfo: data.cloneServerInfo,
                cloneRoles: data.cloneRoles,
                cloneCategories: data.cloneCategories,
                cloneChannels: data.cloneChannels,
                cloneMessages: data.cloneMessages,
                messageLimit: data.messageLimit || 50
            };

            try {
                const submitBtn = document.getElementById('startCloneBtn');
                const originalText = submitBtn.innerHTML;
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Connecting...';

                const response = await fetch('/clone', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        token: data.token,
                        sourceServerId: data.sourceServerId,
                        targetServerId: data.targetServerId,
                        options: options
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    currentClonerId = result.clonerId;
                    
                    if (result.tokenType === 'user') {
                        addLog('⚠️ User token detected - Using Python engine', 'warning');
                    } else {
                        addLog('✅ Bot token detected - Using Node.js engine', 'success');
                    }
                    
                    startCloning();
                } else {
                    alert('❌ Error: ' + result.error);
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalText;
                }
            } catch (error) {
                alert('❌ Connection error: ' + error.message);
                const submitBtn = document.getElementById('startCloneBtn');
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<i class="fas fa-play me-2"></i>Start Clone';
            }
        });

        function startCloning() {
            // Reset button state before switching views
            const submitBtn = document.getElementById('startCloneBtn');
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-play me-2"></i>Start Clone';
            
            document.getElementById('main-form').style.display = 'none';
            document.getElementById('cloning-section').style.display = 'block';
            document.getElementById('stopCloneBtn').style.display = 'inline-block';
            document.getElementById('newCloneBtn').style.display = 'none';
            
            document.getElementById('logs').innerHTML = '<div class="log-entry log-info"><i class="fas fa-play me-2"></i>Starting clone process...</div>';
        }

        function stopCloning() {
            if (currentClonerId) {
                socket.emit('stop-cloning', { clonerId: currentClonerId });
            }
            resetUI();
        }

        function resetUI() {
            document.getElementById('main-form').style.display = 'block';
            document.getElementById('cloning-section').style.display = 'none';
            document.getElementById('stopCloneBtn').style.display = 'none';
            document.getElementById('newCloneBtn').style.display = 'none';
            
            // Reset button state
            const submitBtn = document.getElementById('startCloneBtn');
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-play me-2"></i>Start Clone';
            
            // Clear form data for fresh start
            document.getElementById('token').value = '';
            document.getElementById('sourceServerId').value = '';
            document.getElementById('targetServerId').value = '';
            
            // Reset progress and stats
            document.getElementById('progress-text').textContent = 'Ready to start...';
            document.getElementById('progress-percentage').textContent = '0%';
            document.getElementById('progress-bar').style.width = '0%';
            
            // Reset all stats
            document.getElementById('stat-roles').textContent = '0';
            document.getElementById('stat-categories').textContent = '0';
            document.getElementById('stat-text-channels').textContent = '0';
            document.getElementById('stat-voice-channels').textContent = '0';
            document.getElementById('stat-messages').textContent = '0';
            document.getElementById('stat-errors').textContent = '0';
            
            currentClonerId = null;
        }

        document.getElementById('stopCloneBtn').addEventListener('click', stopCloning);
        document.getElementById('newCloneBtn').addEventListener('click', resetUI);

        // Socket events
        socket.on('cloning-progress', function(data) {
            if (data.clonerId === currentClonerId) {
                updateProgress(data.message, data.progress);
            }
        });

        socket.on('cloning-stats', function(data) {
            if (data.clonerId === currentClonerId) {
                updateStats(data.stats);
            }
        });

        socket.on('cloning-log', function(data) {
            if (data.clonerId === currentClonerId) {
                addLog(data.message, 'info');
            }
        });

        socket.on('cloning-error', function(data) {
            if (data.clonerId === currentClonerId) {
                addLog(data.message, 'error');
            }
        });

        socket.on('cloning-complete', function(data) {
            if (data.clonerId === currentClonerId) {
                if (data.success) {
                    addLog('✅ Clone completed successfully!', 'success');
                    updateProgress('Completed Successfully', 100);
                    
                    // Show New Clone button and hide Stop button
                    document.getElementById('stopCloneBtn').style.display = 'none';
                    document.getElementById('newCloneBtn').style.display = 'inline-block';
                    
                    // Show success message
                    setTimeout(() => {
                        alert('🎉 Clone completed successfully!\n\nClick "New Clone" to start another clone or wait for auto-reset.');
                    }, 1000);
                } else {
                    addLog('❌ Clone failed!', 'error');
                }
                
                // Auto-reset UI after 10 seconds for successful clones, 5 seconds for failures
                setTimeout(() => {
                    resetUI();
                }, data.success ? 10000 : 5000);
            }
        });

        socket.on('cloning-stopped', function(data) {
            if (data.clonerId === currentClonerId) {
                addLog('⏹️ Clone stopped by user', 'info');
                resetUI();
            }
        });

        function updateProgress(message, progress) {
            document.getElementById('progress-text').textContent = message;
            document.getElementById('progress-percentage').textContent = Math.round(progress) + '%';
            document.getElementById('progress-bar').style.width = progress + '%';
        }

        function updateStats(stats) {
            document.getElementById('stat-roles').textContent = stats.roles_created || stats.rolesCloned || 0;
            document.getElementById('stat-categories').textContent = stats.categories_created || stats.categoriesCloned || 0;
            document.getElementById('stat-text-channels').textContent = stats.text_channels_created || stats.textChannelsCloned || 0;
            document.getElementById('stat-voice-channels').textContent = stats.voice_channels_created || stats.voiceChannelsCloned || 0;
            document.getElementById('stat-messages').textContent = stats.messages_cloned || stats.messagesCloned || 0;
            document.getElementById('stat-errors').textContent = stats.errors || 0;
        }

        function addLog(message, type = 'info') {
            const logs = document.getElementById('logs');
            const timestamp = new Date().toLocaleTimeString();
            const logEntry = document.createElement('div');
            logEntry.className = `log-entry log-${type}`;
            
            let icon = '';
            switch(type) {
                case 'error': icon = '<i class="fas fa-exclamation-triangle me-2"></i>'; break;
                case 'success': icon = '<i class="fas fa-check-circle me-2"></i>'; break;
                case 'warning': icon = '<i class="fas fa-exclamation-circle me-2"></i>'; break;
                default: icon = '<i class="fas fa-info-circle me-2"></i>'; break;
            }
            
            logEntry.innerHTML = `${icon}[${timestamp}] ${message}`;
            logs.appendChild(logEntry);
            logs.scrollTop = logs.scrollHeight;
        }
    </script>
</body>
</html>
